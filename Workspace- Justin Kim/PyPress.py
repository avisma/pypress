# pypress.py# Designed by Ben Underwood and Justin Kim# A version of Letterpress for Python# Original game designed and published by atebitsfrom graphics import *import stringimport randomimport lib_button as buttonfrom time import sleepfrom platform import systemimport winsound as wsoundPLAYER_ONE_COLOR = "cyan"PLAYER_TWO_COLOR = "goldenrod"# Music global is set once in 'main()'.def drawWin():    win = GraphWin("PyPress.py", 700, 600)    win.setCoords(0, 0, 700, 600)    return windef checkMusic(win):    global music    askMusic = Text(        Point(350, 300), "Would you like to enable the game's soundtrack? ")    askMusic.draw(win)    yesButton = button.Button(win, Point(250, 250), 100, 20, "Of Course!")    yesButton.activate()    noButton = button.Button(win, Point(450, 250), 100, 20, "Not this time.")    noButton.activate()    p = win.getMouse()    checked = False    while not checked:        if yesButton.clicked(p):            music = True            checked = True            yesButton.deactivate()            noButton.deactivate()            askMusic.setText("The soundtrack will be played!")            sleep(1)        elif noButton.clicked(p):            music = False            checked = True            yesButton.deactivate()            noButton.deactivate()            askMusic.setText("Alright, music will not be played this time around.")            sleep(1)    yesButton.undraw()    noButton.undraw()    askMusic.undraw()    print(music)    def drawBoard(win):    box = [""] * 25    letters = []    upLeft = Point(100, 500)    downRight = Point(150, 450)    width = 100# downRight.getX() - upLeft.getX()    height = 100# upLeft.getY() - downRight.getY()    center = Point(150, 50) ##Revert if needed##    for i in range(25): # Draw Buttons        box[i] = button.Button(win, center, width, height, str(box[i]))         if not i in [4, 9, 14, 19]:            if round(center.getX()) in [150, 350, 550]:                center.move(0, 100)            else:                center.move(0, -100)        else:            center.move(100, 0)                return boxdef initTiles(box, win):        for i in range(25): # Label buttons        letters.append(random.choice(string.ascii_uppercase))        box[i].label.setSize(20)        box[i].label.setText(letters[i])        box[i].activate()    submit = False    submitButton = button.Button(win, Point(650, 550), 70, 30, "submit!")    submitButton.activate()    return submit, submitButtondef setAllActive(ButtonList):    for i in ButtonList:        i.activate()        #i.setFill('light gray', 'light gray')def setAllInactive(ButtonList):    for i in ButtonList:        i.deactivate()        i.setFill('light gray', 'light gray')        def undrawAll(chosenLetterButtons):    try:        chosenLetterButtons[0:len(chosenLetterButtons) - 1].undraw##        for i in range(len(chosenLetterButtons)):##            chosenLetterButtons[i].undraw()    except AttributeError:        passdef turnSwitch():    global color    global lastColor        if color == PLAYER_ONE_COLOR:        color = PLAYER_TWO_COLOR        lastColor = PLAYER_ONE_COLOR    elif color == PLAYER_TWO_COLOR:        color = PLAYER_ONE_COLOR        lastColor = PLAYER_TWO_COLOR    time.sleep(1)def makeScore(chosenLetters, blueLetters, redLetters):    letterList = []    global p1Scores    global p2Scores    for i in range(len(chosenLetters)):        letterList.append(chosenLetters[i])    if color == PLAYER_ONE_COLOR:        blueLetters = blueLetters + letterList        for i in range(len(wasClicked)):            p1Scores[i] = wasClicked[i]    elif color == PLAYER_TWO_COLOR:        redLetters = redLetters + letterList        for i in range(len(wasClicked)):            p2Scores[i] = wasClicked[i]##    print("within makeScore(): ", wasClicked,##          p1Scores, p2Scores, "\n")    return letterListdef isClicked(click, box):    global wasClicked    global oldColor    #print(oldColor)    totalButtonClicks = [0] * 25    boxClicked = None        #global lastColor    #print(lastColor)    for i in range(25):        if box[i].clicked(click):            if music == True:                wsound.PlaySound("snd_button_press.wav", wsound.SND_ASYNC)            letter = box[i].getLabel()            box[i].deactivate()            oldColor[i] = lastColor            #box[i].setFill(color, color)            boxClicked = i            wasClicked[i] = True            totalButtonClicks[i] = totalButtonClicks[i] + 1 # :D    if boxClicked == None:        letter = None    return letter, boxClickeddef playPassFail(condition):    """<'pass' or 'fail'> if 'pass', plays a random sound clip from 'valid'otherwise, plays a random sound from invalid sounds."""    if system() == 'Windows':        if condition == 'pass':            n = random.randrange(1, 17)            wsound.PlaySound("snd_valid{0}.wav".format(n), wsound.SND_ASYNC)        else:            n = random.randrange(1, 5)            wsound.PlaySound("snd_invalid{0}.wav".format(n), wsound.SND_ASYNC)def setBoxFill(click, box):    passdef addLetters(letter, boxClicked, blueLetters, redLetters):    global letters    try:        if letters[boxClicked] != None:                        print("\nRemoving", letters[boxClicked], "from 'letters'")            print("\nLocation:", boxClicked, '\n')                        letters[boxClicked] = None                    else:            print("valueError... Redirecting...")            if color == PLAYER_ONE_COLOR:                try:                    if p1Scores[boxClicked]:                        blueLetters.remove(letter)                        print("First Player clicked their own letter.")                    else:                        print("Removing from Second Player")                        redLetters.remove(letter)                        print("removed letter from First Player")                except ValueError:                    if letter in blueLetters:                        print("Never mind")                        blueLetters.remove(letter) # See below comment                        pass            elif color == PLAYER_TWO_COLOR:                try:                    if p2Scores[boxClicked]:                        redLetters.remove(letter)                        print("Second Player clicked their own letter.")                    else:                        print("Removing from First Player.")                        blueLetters.remove(letter)                        print('removed letter from First Player')                except ValueError:                    if letter in redLetters:                        print("Never mind")                        redLetters.remove(letter) #At this point, the                                            # letter has already been                                            # added to 'chosenLetters'.                                            # Removing the existing                                            # letter from the list                                            # prevents the program from                                            # duplicating the letter,                                            # as the letter will be                                            # re-added as part of the                                            # new word.                        pass            else: print('What? Neither Player scored!\n\n',letters)    except IndexError:        print("Index Error, Redirecting...")        print(letters)        print(len(letters))def main():    win = drawWin()    global music    music = None    if system() == 'Windows': # See import statements at top        checkMusic(win)    if music == True:        wsound.PlaySound("snd_intro.wav", wsound.SND_ASYNC)        print(type(wsound.PlaySound), "VALID1.wav", wsound.SND_ASYNC)        print("Sound Played.")        global letters    global wasClicked    global p1Scores    global p2Scores    letters = []    playedWords = []        box = drawBoard(win)        p1Scores = [False] * 25    p2Scores = [False] * 25    wasClicked = [False] * 25        submit, submitButton = initTiles(box, win)    chosenLetters = []    drawChosenLetters = Text(Point(350, 550), chosenLetters) # Replaced with buttons    drawChosenLetters.setSize(20)    drawChosenLetters.draw(win)    resetButton = button.Button(win, Point(350, 515), 100, 20, "reset")    resetButton.activate()    global color    global lastColor    global oldColor    color = PLAYER_ONE_COLOR    lastColor = "light gray" # Mark out in future.    oldColor = [None] * 25        testCount = 0    submit = False    invalidText = Text(Point(650, 505), "Not a valid word!")    redLetters = []    blueLetters = []        finalScores = [""] * 25    chosenLetterButtons = [None] * 25    p1ScoreText = Text(Point(200, 585), "Player 1: " + str(p1Scores.count(True)))    p1ScoreText.setSize(20)    p1ScoreText.setFill(PLAYER_ONE_COLOR)    p1ScoreText.setStyle('bold')        p2ScoreText = Text(Point(500, 585), "Player 2: " + str(p2Scores.count(True)))    p2ScoreText.setSize(20)    p2ScoreText.setFill(PLAYER_TWO_COLOR)    p1ScoreText.draw(win)    p2ScoreText.draw(win)    while (finalScores.count(PLAYER_ONE_COLOR) + finalScores.count(PLAYER_TWO_COLOR)) < 25: # Game is not over        # interestingly, another way to calculate a game end is:        #        # while "" not in finalScores:        #        # but this is unclear                while True:            try:                click = win.getMouse()            except GraphicsError:                win.close                exit()            wordlist = []                        if submitButton.clicked(click):                while None in chosenLetters:                    chosenLetters.remove(None)                while wordlist == []:                    wordlist = open("wordlist.txt")                                    if chosenLetters == []:                    continue                                elif str("\n" + "".join(chosenLetters).lower() + "\n") not in wordlist.read(): # word not in list                    try:                        invalidText.draw(win)                    except GraphicsError:                        pass                    if music:                        playPassFail('fail')                    print(chosenLetters)                    wordlist.close()                    #print("\nNot Valid Break\n")##                elif True:##                    print("wordlist: True")                elif any(e for e in playedWords if e.startswith("".join(chosenLetters))): # start of played word                    invalidText.setText("This word (or\na derivative) has\nalready been\nplayed!")                    try:                        invalidText.draw(win)                    except GraphicsError:                        pass                    if music:                        playPassFail('fail')                    print(chosenLetters)##                elif True:##                    print("no derivatives: True")                                else: # Valid Word                    submitButton.deactivate()                    if music:                        playPassFail('pass')                    print("\nSubmitting and Ending Turn...\n")                    break # loop exit                        if resetButton.clicked(click):                if music == True:                    wsound.PlaySound("snd_reset_button.wav", wsound.SND_ASYNC)                chosenLetters = []                drawChosenLetters.setText(chosenLetters)                wasClicked = [False] * 25                setAllActive(box)                            letter, boxClicked = isClicked(click, box)                        if letter != None:                                chosenLetters.append(letter) # = chosenLetters + letter # Adds letters to 'chosenLetters'                invalidText.undraw()                addLetters(letter, boxClicked, blueLetters, redLetters)                drawChosenLetters.setText(chosenLetters)        letterList = makeScore(chosenLetters, blueLetters, redLetters)                #print("within main(): ", letterList, p1Scores, p2Scores)        for i in range(25): #sets the cosmetic color of each tile            if color == PLAYER_ONE_COLOR:                if p1Scores[i] == True:                    box[i].setFill(color, color)                    finalScores[i] = color            elif color == PLAYER_TWO_COLOR:                if p2Scores[i] == True:                    box[i].setFill(color, color)                    finalScores[i] = color                playedWords.append("".join(letterList))        print(playedWords)                #print(blueLetters, redLetters)                    turnSwitch()        chosenLetters = []        wasClicked = [False] * 25        drawChosenLetters.setText(chosenLetters)        print("\n" + "-" * 20, "Switching Turns", "-" * 20 + "\n")        testCount = testCount + 1        submit = True        submitButton.activate()        setAllActive(box)        if color == PLAYER_ONE_COLOR:            p1ScoreText.setStyle('bold')            p2ScoreText.setStyle('normal')        elif color == PLAYER_TWO_COLOR:            p1ScoreText.setStyle('normal')            p2ScoreText.setStyle('bold')        print(finalScores)        p1ScoreText.setText("Player 1: " + str(finalScores.count(PLAYER_ONE_COLOR)))        p2ScoreText.setText("Player 2: " + str(finalScores.count(PLAYER_TWO_COLOR)))    print("Finished!")    print(letters)    print(len(blueLetters), len(redLetters))    print(len(letters))    print("Exiting...")    if finalScores.count(PLAYER_ONE_COLOR) > finalScores.count(PLAYER_TWO_COLOR):        winner = "Player 1"        winnerColor = PLAYER_ONE_COLOR    else:        winner = "Player 2"        winnerColor = PLAYER_TWO_COLOR    drawWinText(win, winner, winnerColor) # See below    if system() == 'Windows':        if music:            wsound.PlaySound("impulse.wav", wsound.SND_ASYNC)        win.getMouse()    if system() == 'Windows':        if music:            wsound.PlaySound(None, wsound.SND_ASYNC)    win.close()def drawWinText(win, winner, color):    outlineBox = Rectangle(Point(155, 230), Point(545, 370))    outlineBox.setFill('black')    outlineBox.setOutline('black')    outlineBox.setWidth(10)    outlineBox.draw(win)        winBox = Rectangle(Point(160, 235), Point(540, 365))    winBox.setFill('black')    winBox.setOutline(color)    winBox.setWidth(10)    winBox.draw(win)        winText = Text(Point(350, 300), winner + " won!")    winText.setSize(35)    winText.setStyle('bold')    winText.setFill(color)    winText.draw(win)if __name__ == "__main__":    main()